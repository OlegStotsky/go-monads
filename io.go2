package go_monads

type IO(type U) interface {
  unsafePerformIO() U
}

type IOImpl(type U) struct {
  unsafeRun Func0(U)
}

func (i IOImpl(U)) unsafePerformIO() U {
  return i.unsafeRun()
}

func Delay(type U)(f Func0(U)) IO(U) {
  return IOImpl(U){ unsafeRun: f }
}

func Map(type U, V)(m IO(U), f Func(U, V)) IO(V) {
  return IOImpl(V){ unsafeRun: func() V { return f(m.unsafePerformIO()) } }
}

func FlatMap(type U, V)(m IO(U), f Func(U, IO(V))) IO(V) {
  return f(m.unsafePerformIO())
}

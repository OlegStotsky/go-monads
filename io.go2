package go_monads

type IO(type U) interface {
  UnsafePerformIO() U
}

type ioImpl(type U) struct {
  unsafeRun Func0(U)
}

func (i ioImpl(U)) UnsafePerformIO() U {
  return i.unsafeRun()
}

func Return(type U)(f Func0(U)) IO(U) {
  return ioImpl(U){ unsafeRun: f }
}

func Map(type U, V)(m IO(U), f Func(U, V)) IO(V) {
  return ioImpl(V){ unsafeRun: func() V { return f(m.UnsafePerformIO()) } }
}

func FlatMap(type U, V)(m IO(U), f Func(U, IO(V))) IO(V) {
  return f(m.UnsafePerformIO())
}
